#!/usr/bin/env perl6




use v6;




# -----------------------------------------------------------------------------
# main
# -----------------------------------------------------------------------------

# release
multi sub MAIN(
    Str $file,
    Str :N(:$pkgname),
    Str :V(:$pkgver),
    Int :R(:$pkgrel),
    Str :D(:$pkgdesc),
    Str :I(:$txn-dir),
    Int :L(:$date-local-offset),
    Str :T(:$template)
)
{
    my %opts;
    %opts<pkgname> = $pkgname if $pkgname;
    %opts<pkgver> = $pkgver if $pkgver;
    %opts<pkgrel> = $pkgrel if $pkgrel;
    %opts<pkgdesc> = $pkgdesc if $pkgdesc;
    %opts<txn-dir> = ~$txn-dir.IO.resolve if $txn-dir;
    %opts<date-local-offset> = Int($date-local-offset) if $date-local-offset;
    %opts<template> = $template if $template;

    use TXN;
    mktxn(:$file, :release, |%opts);
}

# serialize
multi sub MAIN('serialize', Str $file, Str :m(:$mode) = 'perl')
{
    use TXN;
    given $mode
    {
        when /:i perl/
        {
            say from-txn(:$file).perl;
        }
        when /:i json/
        {
            say from-txn(:$file, :json);
        }
        default
        {
            say "Sorry, invalid mode.\n";
            USAGE();
            exit 1;
        }
    }
}




# -----------------------------------------------------------------------------
# usage
# -----------------------------------------------------------------------------

sub USAGE()
{
    constant $HELP = q:to/EOF/;
    Usage:
      mktxn [--pkgname=<name>]
            [--pkgver=<version>]
            [--pkgrel=<release>]
            [--pkgdesc=<description>]
            [--txn-dir=<dir>]
            [--date-local-offset=<offset>]
            [--template=<template>]
            <file>                              Make release build from file
      mktxn [--mode=<mode>] serialize <file>    Serialize transaction journal

    optional arguments:
      -h, --help
        print this help message
      -N, --pkgname=<name>
        the name of release build
      -V, --pkgver=<version>
        the version number of release build
      -R, --pkgrel=<release>
        the release number of release build
      -D, --pkgdesc=<description>
        the description of release build
      -I, --txn-dir=<dir>
        the include directory
      -L, --date-local-offset=<offset>
        the local offset for dates without one
      -T, --template=<template>
        the location of the config template for release build
      -m, --mode=<mode>
        the serialization format
    EOF
    say $HELP.trim;
}

# vim: set filetype=perl6 foldmethod=marker foldlevel=0:
