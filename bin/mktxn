#!/usr/bin/perl6




use v6;
constant $PROGRAM = 'mktxn';
constant $VERSION = v0.0.2;




# -----------------------------------------------------------------------------
# main
# -----------------------------------------------------------------------------

# release
multi sub MAIN(
    Str:D $file,
    Str :N(:$pkgname),
    Str :V(:$pkgver),
    Int :R(:$pkgrel),
    Str :D(:$pkgdesc),
    Str :T(:$template)
)
{
    my %opts;
    %opts<pkgdesc> = $pkgdesc if $pkgdesc;
    %opts<pkgname> = $pkgname if $pkgname;
    %opts<pkgrel> = $pkgrel if $pkgrel;
    %opts<pkgver> = $pkgver if $pkgver;
    %opts<template> = $template if $template;
    use TXN;
    mktxn(:$file, :release, |%opts);
}

# serialize
multi sub MAIN('serialize', Str:D $file, Str:D :m(:$mode) = 'perl')
{
    use TXN;
    given $mode
    {
        when /:i perl/
        {
            say from-txn(:$file).perl;
        }
        when /:i json/
        {
            say from-txn(:$file, :json);
        }
        default
        {
            say "Sorry, invalid mode.\n";
            USAGE();
            exit 1;
        }
    }
}




# -----------------------------------------------------------------------------
# usage
# -----------------------------------------------------------------------------

sub USAGE()
{
    my Str:D $help-text = q:to/EOF/;
    Usage:
      mktxn [--pkgname=NAME]
            [--pkgver=VERSION]
            [--pkgrel=RELEASE]
            [--pkgdesc=DESCRIPTION]
            [--template=TEMPLATE]
            FILE                            Make release build from file
      mktxn [--mode=MODE] serialize FILE    Serialize transaction journal

    optional arguments:
      -D, --pkgdesc=DESCRIPTION
        the description of release build
      -N, --pkgname=NAME
        the name of release build
      -R, --pkgrel=RELEASE
        the release number of release build
      -T, --template=TEMPLATE
        the location of the config template for release build
      -V, --pkgver=VERSION
        the version number of release build
      -m, --mode=MODE
        the serialization format (json, perl)
    EOF
    say $help-text.trim;
}

# vim: ft=perl6 fdm=marker fdl=0
